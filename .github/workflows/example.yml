name: App build

on: 
  workflow_dispatch:
  push:
    branches: [main]

jobs:
  build_with_signing:
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install the Apple certificate and provisioning profile
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          # Create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # Debug: Show paths
          echo "Certificate path: $CERTIFICATE_PATH"
          echo "Provisioning profile path: $PP_PATH"
          echo "Keychain path: $KEYCHAIN_PATH"

          # Import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode -o $PP_PATH

          # Create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          # Import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security set-key-partition-list -S apple-tool:,apple: -k "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

          # Apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles

      - name: Build archive
        run: |
          xcodebuild -scheme "TestDistribution" -allowProvisioningUpdates \
          -archivePath $RUNNER_TEMP/testdistribution.xcarchive \
          -sdk iphoneos \
          -configuration Debug \
          -destination generic/platform=iOS \
          clean archive

      - name: Create ExportOptions.plist
        env:
          EXPORT_OPTS_PATH: ${{ runner.temp }}/ExportOptions.plist
        run: |
          # Debug: Show path where ExportOptions.plist will be created
          echo "Creating ExportOptions.plist at $EXPORT_OPTS_PATH"

          # Create a valid XML plist file
          cat <<EOF > $EXPORT_OPTS_PATH
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
            <key>method</key>
            <string>ad-hoc</string>
            <key>teamID</key>
            <string>goran.tatomirov@vegait.rs</string>
            <key>provisioningProfiles</key>
            <dict>
              <key>omega.TestDistribution</key>
              <string>Test Distribution Profile</string>
            </dict>
            <key>signingStyle</key>
            <string>manual</string>
            <key>stripSwiftSymbols</key>
            <true/>
            <key>thinning</key>
            <string>none</string>
          </dict>
          </plist>
          EOF

          # Debug: Show the content of ExportOptions.plist
          echo "ExportOptions.plist content:"
          cat $EXPORT_OPTS_PATH

          # Confirm the file exists
          if [ ! -f "$EXPORT_OPTS_PATH" ]; then
            echo "Error: ExportOptions.plist was not created successfully."
            exit 1
          fi

      - name: Ensure export path exists
        env:
          EXPORT_PATH: ${{ runner.temp }}/build
        run: |
          # Debug: Show where the export path will be created
          echo "Creating export path at $EXPORT_PATH"
          
          mkdir -p $EXPORT_PATH

          # Debug: Show the created export path
          echo "Export path created: $EXPORT_PATH"
          ls -la $EXPORT_PATH

      - name: Export IPA
        env:
          EXPORT_OPTS_PATH: ${{ runner.temp }}/ExportOptions.plist
          EXPORT_PATH: ${{ runner.temp }}/build
        run: |
          # Debugging: Print paths to confirm they are correct
          echo "Archive path: $RUNNER_TEMP/testdistribution.xcarchive"
          echo "Export options path: $EXPORT_OPTS_PATH"
          echo "Export path: $EXPORT_PATH"

          # Ensure the archive exists
          if [ ! -d "$RUNNER_TEMP/testdistribution.xcarchive" ]; then
            echo "Error: Archive path does not exist."
            exit 1
          fi

          # Ensure the export options plist exists
          if [ ! -f "$EXPORT_OPTS_PATH" ]; then
            echo "Error: ExportOptions.plist file does not exist."
            exit 1
          fi

          # Ensure the export directory exists
          if [ ! -d "$EXPORT_PATH" ]; then
            echo "Error: Export path does not exist."
            exit 1
          fi

          # Export the IPA
          xcodebuild -exportArchive -archivePath $RUNNER_TEMP/testdistribution.xcarchive -exportOptionsPlist $EXPORT_OPTS_PATH -exportPath $EXPORT_PATH

      - name: Upload application
        uses: actions/upload-artifact@v3
        with:
          name: app
          path: ${{ runner.temp }}/build/I\ am\ Groot.ipa
          retention-days: 3
